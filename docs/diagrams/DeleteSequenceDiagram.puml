@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant "d:DeleteCommand" as DeleteCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delete 1 3")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delete 1 3")
activate AddressBookParser

create DeleteCommandParser
AddressBookParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> AddressBookParser
deactivate DeleteCommandParser

AddressBookParser -> DeleteCommandParser : parse("1 3")
activate DeleteCommandParser

create DeleteCommand
DeleteCommandParser -> DeleteCommand : new([Index(1), Index(3)])
activate DeleteCommand

DeleteCommand --> DeleteCommandParser
deactivate DeleteCommand

DeleteCommandParser --> AddressBookParser : d
deactivate DeleteCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> DeleteCommand : execute(model)
activate DeleteCommand

DeleteCommand -> Model : getFilteredPersonList()
activate Model

Model --> DeleteCommand : personList
deactivate Model

DeleteCommand -> DeleteCommand : validateAllIndices(personList)
activate DeleteCommand
note right: Checks all indices are valid.\nThrows CommandException\nwith specific invalid indices\nif any are out of bounds.
DeleteCommand --> DeleteCommand
deactivate DeleteCommand

DeleteCommand -> DeleteCommand : collectPersonsToDelete(personList)
activate DeleteCommand
note right: Collects persons in\ndescending index order
DeleteCommand --> DeleteCommand : [person1, person3]
deactivate DeleteCommand

loop for each person in personsToDelete
    DeleteCommand -> Model : deletePerson(person)
    activate Model
    Model --> DeleteCommand
    deactivate Model
end

DeleteCommand -> DeleteCommand : formatSuccessMessage(deletedPersons)
activate DeleteCommand
DeleteCommand --> DeleteCommand : message
deactivate DeleteCommand

create CommandResult
DeleteCommand -> CommandResult : new(message)
activate CommandResult

CommandResult --> DeleteCommand : r
deactivate CommandResult

DeleteCommand --> LogicManager : r
deactivate DeleteCommand

[<--LogicManager
deactivate LogicManager
@enduml
